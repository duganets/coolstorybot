package runner

import (
	//"coolstorybot/runner"
	//"coolstorybot/survey"
	"testing"
)

func TestParseSurvey(t *testing.T) {
	cases := []string{
		"",
		"Спроси <@U111U>",
		"qwe <@U111U> <@U222U> как дела вообще",
		"Спроси  как дела вообще",
		"Спроси <@U111U> <@U222U> <@U222U> <@U222U> <@U222U> <@U222U> как дела вообще",
		"Спроси <@U111U> <@U222U>",
		"Спроси <@U111U> <@U222U> как дела @user2 вообще",
		"Спроси <@U111U>  как <@U222U> как дела вообще",
		"Спроси <@U111U>  как <@U222U> как дела <@U222U> вообще",
		"Спроси <@U111U> <@U222U> как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще как дела вообще",
		"Спроси <@U111U> <@U222U> как дела вообще",
		"Спроси <@U111U> <@U222U> <@U222U> <@U222U> как дела вообще",
	}
	for _, src := range cases {
		srv, perr := ParseSurvey(src, "userOwner", map[string]string{"U111U": "user1", "U222U": "user2"})
		if perr != nil {
			t.Logf("parse err: %s\nstr=[%s]", perr, src)
			t.Fail()
		} else if srv == nil {
			t.Logf("survey is nil: str=[%s]", src)
			t.Fail()
		} else {
			t.Log(srv.Info())
			t.Fail()
		}
	}
}
